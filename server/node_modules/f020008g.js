/*eslint no-console: 0, "quotes": [0, "single"], module: 0, globals:[0, "obj"]*/
/*eslint no-unused-vars: ["error", { "args": "none" }]*/
/**"f020008g": {
            "title": "Наименования групп номенклатуры",
            "info": "Мобильный клиент получает наименования групп номенклатуры"
        }, */
'use strict';
exports.fun = function (client, obj, db) {
	return new Promise(function (resolve, reject) {
		if (!(client.idToken)) {
			resolve({ "result": false });
			return;
		}
		let q;
		if (obj.fullsync === true) {
			q = `SELECT
				ig_id,
				igt_id,
				ig_value,
				ig_active,
				extract(epoch from ig_mtime)::integer as ig_mtime
			from trade.item_Groups`;
		} else {
			q = `SELECT
				ig_id,
				igt_id,
				ig_value,
				ig_active,
				extract(epoch from ig_mtime)::integer as ig_mtime
			from trade.item_Groups ig
			JOIN (
				SELECT MAX(st2.st_stime) AS st_stime
				FROM trade.sync_token st2
				WHERE st2.t_id = $1 AND st2.st_table = 'f020008g' AND st2.st_result = TRUE
			) AS st ON (st.st_stime <= ig.ig_mtime)`;
		}
		db.query(q, [client.t_id]).then(
			(value) => {
				db.one(`INSERT INTO trade.sync_token (t_id, st_table, st_stime, st_etime, st_result) VALUES
  						($1,'f020008g',now(),null, FALSE ) RETURNING trade.sync_token.st_id`, [client.t_id]).then(
					(st) => {
						var sync = +st.st_id;
						resolve({ "data": value, sync });
					});

			});
	});
};