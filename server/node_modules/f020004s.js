/*eslint no-console: 0, "quotes": [0, "single"], module: 0, globals:[0, "obj"]*/
/*eslint no-unused-vars: ["error", { "args": "none" }]*/
/*"f020004s": {
            "title": "Координаты",
            "info": "Мобильный клиент отправляет на сервер координаты"
        }, */
"use strict";
exports.fun = function(client, obj, db) {
	return new Promise(function(resolve, reject) {
		if (!client.idToken) {
			resolve({ result: false, sync: obj.sync });
			return;
		}
		console.log("obj", obj);
		var coord, res;
		var vr = value => {
			console.log("value", value);
		};
		var ve = err => {
			console.log("err", err);
			//resolve({"resolve": false, "error":err});
		};
		//{"lc_id":1,  "lc_time":1508924323, "lc_lat":"47.2755261", "lc_lon":"39.6097812",  "lc_provider":"fused", "lc_event":5}
		for (var i = 0; i < obj.data.length; i++) {
			coord = "(" + obj.data[i].lc_lat + "," + obj.data[i].lc_lon + ")";
			res = {
				idToken: client.idToken,
				coord: coord,
				time: new Date(obj.data[i].lc_time * 1000),
				token: client.t_id,
				lc_provider: obj.data[i].lc_provider,
				event: obj.data[i].lc_event
				//"atime": new Date()
			};
			try {
				db
					.query(
						"INSERT INTO trade.log_coords (lc_coord, lc_time, lc_token, lc_event) VALUES (${coord}, ${time}, ${token}, ${event});",
						res
					)
					.then(vr, ve);
			} catch (err) {
				console.log(err);
			}
			//console.log("setLogCoord", res);
		}

		resolve({ result: true, sync: obj.sync });
	});
};
