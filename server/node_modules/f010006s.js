/*eslint no-console: 0, "quotes": [0, "single"], module: 0, globals:[0, "obj"]*/
/*eslint no-unused-vars: ["error", { "args": "none" }]*/
/**
 * 		"f010006s": {
 * 			"title": "Токены",
 * 			"info": "Добавление/редактирование токенов пользователей",
 * 			"example body": {
 * 				"tokens": [
 * 					{
 * 						"t_id": 8,
 * 						"u_id": 1,
 * 						"t_name": "gofman-2",
 * 						"t_key": "2",
 * 						"t_info": null,
 * 						"t_fcm": null,
 * 						"t_type": 1,
 * 						"t_mtime": 1498315199
 * 					}
 * 				]
 * 			},
 * 			"example return": {
 * 				"result": true
 * 			}
 * 		}, 
 */
'use strict';
exports.fun = function (client, obj, db) {
	return new Promise(function (resolve, reject) {
		if (!(client.auth)) {
			resolve({ "result": false, "sync": obj.sync });
			return;
		}
		var q = "";
		var ins = [];
		var upd = [];
		var val = [];
		obj.data.forEach(function (el) {
			if (el.t_id) {
				upd.push(el);

			} else ins.push(el);
		}, this);
		if (ins.length > 0) {
			q += `INSERT INTO trade.token (u_id, t_name, t_key, t_info, t_fcm, t_type, t_mtime)
					VALUES `;
			for (let i = 0; i < ins.length; i++) {
				if (i) q += ',';
				val.push(ins[i].u_id);
				if (ins[i].t_name)
					val.push(ins[i].t_name); 
				else val.push((""+(100000*ins[i].u_id+ 10000*Math.random())).slice(0,6));
				val.push(ins[i].t_key);
				val.push(ins[i].t_info);
				val.push(ins[i].t_fcm);
				val.push(ins[i].t_type);
				q += `($${i * 6 + 1}, $${i * 6 + 2}, $${i * 6 + 3}, $${i * 6 + 4}, $${i * 6 + 5}, $${i * 6 + 6}, now())`;

			}
			q += ` RETURNING trade.token.t_id;
			`;
		}
		if (upd.length > 0) {
			q += `UPDATE trade.token SET `;
			for (let i = 0; i < upd.length; i++) {
				if (upd[i].t_name) {
					val.push(upd[i].t_name);
					q += ` t_name = $${val.length},`;
				}
				if (upd[i].t_key) {
					val.push(upd[i].t_key);
					q += ` t_key = $${val.length},`;
				}
				if (upd[i].t_info) {
					val.push(upd[i].t_info);
					q += ` t_info = $${val.length},`;
				}
				if (upd[i].t_fcm) {
					val.push(upd[i].t_fcm);
					q += ` t_fcm = $${val.length},`;
				}
				if (upd[i].t_type) {
					val.push(upd[i].t_type);
					q += ` t_type = $${val.length},`;
				}
				val.push(upd[i].t_id);
				q += ` t_mtime      = now()
				WHERE t_id = $${val.length};`;
			}

		}
		console.log(q, val);
		//console.log(obj, client);
		db.query(q, val).then(
			(value) => {
				resolve({ "data": value, "sync": obj.sync });
			});
	});
};