/*eslint no-console: 0, "quotes": [0, "single"], module: 0, globals:[0, "obj"]*/
/*eslint no-unused-vars: ["error", { "args": "none" }]*/
/*"f020015g": {
            "title": "Связь контрагентов и точек доставки",
            "info": "Мобильный клиент получает связи контрагентов и точек доставки"
        },*/
'use strict';
exports.fun = function (client, obj, db) {
	return new Promise(function (resolve, reject) {
		if (!(client.auth)) {
			resolve({ "result": false });
			return;
		}
		var q;
		if (obj.fullsync === true) {
			q = `SELECT
					lcp_id,
					ca_id,
					dp_id,
					lcp_active,
					extract(epoch from lcp_mtime)::integer as lcp_mtime
				from trade.links_countragent_delivery_point`;

		} else {
			q = `SELECT
					lcp_id,
					ca_id,
					dp_id,
					lcp_active,
					extract(epoch from lcp_mtime)::integer as lcp_mtime
				from trade.links_countragent_delivery_point lcp
				JOIN (
					SELECT MAX(st2.st_stime) AS st_stime
					FROM trade.sync_token st2
					WHERE st2.t_id = $1 AND st2.st_table = 'f020015g' AND st2.st_result = TRUE
				) AS st ON (st.st_stime <= lcp.lcp_mtime);`;
		}
		db.query(q, [client.t_id]).then(
			(value) => {
				db.one(`INSERT INTO trade.sync_token (t_id, st_table, st_stime, st_etime, st_result) VALUES
  						($1,'f020015g',now(),null, FALSE ) RETURNING trade.sync_token.st_id`, [client.t_id]).then(
					(st) => {
						var sync = +st.st_id;
						resolve({ "data": value, sync });
					});
			});
	});
};